{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Grid.vue?8a5b","webpack:///./src/App.vue","webpack:///./src/components/Grid.vue","webpack:///./src/components/Grid.vue?d16c","webpack:///./src/assets/gridDefn.js","webpack:///./src/modules/helpers/convertToGrid.js","webpack:///./src/modules/helpers/arrayUtils.js","webpack:///./src/modules/helpers/gridIndex.js","webpack:///./src/modules/analysis/gridSquares/findGridCandidates.js","webpack:///./src/modules/analysis/rowColBox/findRowColBoxCandidates.js","webpack:///./src/modules/analysis/rowColBox/getSingleCandidates.js","webpack:///./src/modules/analysis/gridSquares/findGridSingles.js","webpack:///./src/modules/analysis/scanCollections.js","webpack:///./src/modules/analysis/candidateLines/findCandidateLines.js","webpack:///./src/modules/analysis/candidateLines/findDeletableFromCandidateLines.js","webpack:///./src/modules/analysis/blocks/findBlocks.js","webpack:///./src/modules/helpers/typeConvert.js","webpack:///./src/modules/analysis/blocks/findDeletableFromBlocks.js","webpack:///./src/modules/hints/gridSingleHint.js","webpack:///./src/modules/helpers/same.js","webpack:///./src/modules/hints/rcbSingleHint.js","webpack:///./src/modules/hints/candidateLineHint.js","webpack:///./src/modules/hints/blockingHint.js","webpack:///./src/modules/hints/getHint.js","webpack:///./src/modules/solver.js","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/App.vue?b7fd"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","title","gridVals","gridCandidates","hint","hintOutput","highlights","action","id","order","kernelMatrix","x","y","width","height","filterUnits","type","baseFrequency","numOctaves","xChannelSelector","yChannelSelector","scale","in","lighting-color","surfaceScale","azimuth","elevation","gridData","square","index","class","gridSingle","collectionSingle","squareInput","e","getSquareVal","message","toggleInput","togglePossibles","showPossibles","props","String","Array","this","methods","console","log","val","watch","map","target","render","__scopeId","sudokuStr","convertToGrid","str","replace","Number","removeArrayElements","params","baseArray","filter","elementsToRemove","includes","unionArrays","args","Set","flat","intersectSets","a","b","has","gridIndexUtil","rowFloor","colFloor","boxFloor","getBoxPosition","gridIndexFromBox","position","boxRootIndex","boxPositionIndex","getRowIndex","floorIndex","getColIndex","getRowIndecies","from","_","getColIndecies","getBoxIndecies","indexCache","Map","collectionCache","row","col","box","gridIndex","indexInfo","floors","collection","related","set","sudokuVals","findSquareCandidates","idx","grid","gridIndexReference","rowVals","colVals","boxVals","nonCandidates","findGridCandidates","gridReference","reduce","candidateMap","squareValue","findRowColBoxCandidates","analysis","analysisMap","addToCollection","number","possibles","add","forEach","getSingleCandidates","candidates","size","findGridSingles","singles","scanCollections","rowColBoxCandidates","results","collections","eachCollection","iterateCollections","candidateList","findCandidateLines","candidateArr","firstCandidate","every","Math","floor","findDeletableFromCandidateLines","candy","candidateLine","type2","blocked","skewer","delete","toDelete","findBlocks","getRelatedCollections","combined","pairs","blocks","grouping","groupSize","range","end","pow","start","permutations","combination","toString","replaceAll","res","split","reverse","arr","collectionKeys","keys","allPossibles","concat","uniquePossibles","sort","permutation","canContain","collectionKey","parseInt","typeConvert","findDeletableFromBlocks","checkBlock","canDeleteFrom","canDeleteFromX","block","idxInfo","blockedIdxs","relatedX","blockNumbers","some","blockType","gridSingleHint","sameRow","sameCol","sameBox","rcbSingleHint","single","nots","typeO","candidateLineHint","deletable","blockingHint","deletableFromBlocks","randomHint","random","getHint","gridSingles","candidateLines","nextHint","solver","analyse","time","timeEnd","setSquare","gridInfo","relatedSquares","deleteCandidate","getGrid","getGridCandidates","initialGrid","gridDefn","humanise","displayData","original","highlight","rotate","join","components","Grid","computed","gridCandidates2","created","showHint","createApp","App","mount"],"mappings":"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","file":"js/app.a91eb347.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Grid.vue?vue&type=style&index=0&id=b6d49a20&scoped=true&lang=css\"","<template>\n  <div>\n    <Grid\n      title=\"sudoku solver\"\n      :gridVals=\"gridCandidates\"\n      :hint=\"hintOutput\"\n      :highlights=\"highlights\"\n    />\n    <button v-on:click=\"action\">get hint</button>\n  </div>\n</template>\n\n<script>\nimport Grid from \"./components/Grid\";\nimport gridDefn from \"./assets/gridDefn\";\nimport convertToGrid from \"./modules/helpers/convertToGrid\";\nimport solver from \"./modules/solver\";\n\nlet initialGrid = convertToGrid(gridDefn);\nlet { getGridCandidates, hint, setSquare, getGrid, deleteCandidate } = solver(\n  initialGrid\n);\n\nlet grid = getGrid();\nlet original = [...grid];\nlet gridCandidates = getGridCandidates();\nlet nextHint;\nlet humanise = Array.from(\n  { length: 81 },\n  () => \"r\" + Math.floor(Math.random() * 6)\n);\n\nfunction displayData(grid, original) {\n  let highlights = nextHint?.highlights || {};\n  return grid.map((i, idx) => {\n    if (original[idx] > 0) {\n      return { val: i, type: \"original\", highlight: highlights[idx] };\n    } else if (i > 0) {\n      return { val: i, highlight: highlights[idx], rotate: humanise[idx] };\n    } else {\n      return {\n        val: [...gridCandidates.get(idx)].join(\" \"),\n        type: \"possibles\",\n        highlight: highlights[idx]\n      };\n    }\n  });\n}\n\nexport default {\n  name: \"App\",\n  components: {\n    Grid\n  },\n  data() {\n    return {\n      gridCandidates: displayData(grid, original)\n      // hintOutput: hint(),\n    };\n  },\n  computed() {\n    return {\n      gridCandidates2: displayData(grid, original)\n    };\n  },\n  created() {\n    console.log(\"created\");\n    // nextHint = hint();\n    this.showHint(nextHint);\n  },\n  methods: {\n    showHint: function(nextHint) {\n      console.log(\"show\", nextHint);\n    },\n    action: function() {\n      if (nextHint) {\n        if (nextHint.type === \"gridSingle\" || nextHint.type === \"rcbSingle\") {\n          setSquare(nextHint.index, nextHint.number);\n        } else if (nextHint.type === \"candidateLine\") {\n          nextHint.toDelete.forEach(idx =>\n            deleteCandidate(idx, nextHint.number)\n          );\n        } else if (nextHint.type === \"blocks\") {\n          console.log(nextHint);\n          nextHint.canDeleteFrom.forEach(idx => {\n            nextHint.blockNumbers.forEach(number => {\n              deleteCandidate(idx, number);\n            });\n          });\n          nextHint.canDeleteFromX.forEach(idx => {\n            [1, 2, 3, 4, 5, 6, 7, 8, 9].forEach(number => {\n              if (!nextHint.blockNumbers.includes(number)) {\n                deleteCandidate(idx, number);\n              }\n            });\n          });\n        }\n        grid = getGrid();\n        gridCandidates = getGridCandidates();\n      }\n      nextHint = hint();\n      console.log(nextHint);\n      if (nextHint?.type) {\n        this.hintOutput = nextHint;\n        this.highlights = nextHint.index;\n      } else {\n        this.hintOutput = \"no next\";\n      }\n      this.gridCandidates = [...displayData(grid, original)];\n    }\n  }\n};\n</script>\n\n<style>\nhtml {\n  background: #f1efe985;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <div>\n    <h2>{{ title }}</h2>\n    <svg id=\"svgfilters\">\n      <defs>\n        <filter id=\"motionblur\">\n          <feConvolveMatrix\n            order=\"20, 1\"\n            kernelMatrix=\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\"\n          />\n        </filter>\n        <filter\n          x=\"-2%\"\n          y=\"-2%\"\n          width=\"104%\"\n          height=\"104%\"\n          filterUnits=\"objectBoundingBox\"\n          id=\"PencilTexture\"\n        >\n          <feTurbulence\n            type=\"fractalNoise\"\n            baseFrequency=\"1.2\"\n            numOctaves=\"3\"\n            result=\"noise\"\n          ></feTurbulence>\n          <feDisplacementMap\n            xChannelSelector=\"R\"\n            yChannelSelector=\"G\"\n            scale=\"3\"\n            in=\"SourceGraphic\"\n            result=\"newSource\"\n          ></feDisplacementMap>\n        </filter>\n\n        <filter id=\"roughpaper\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\n          <feTurbulence\n            type=\"fractalNoise\"\n            baseFrequency=\"0.04\"\n            result=\"noise\"\n            numOctaves=\"5\"\n          />\n\n          <feDiffuseLighting in=\"noise\" lighting-color=\"white\" surfaceScale=\"2\">\n            <feDistantLight azimuth=\"45\" elevation=\"60\" />\n          </feDiffuseLighting>\n        </filter>\n      </defs>\n    </svg>\n    <div id=\"grid\">\n      <div\n        class=\"square\"\n        v-for=\"(square, index) in gridData\"\n        :key=\"index\"\n        :class=\"{\n          [square.type]: true,\n          [square.highlight]: square.highlight,\n          [square.rotate]: square.rotate\n        }\"\n        :gridSingle=\"square.gridSingle\"\n        :collectionSingle=\"square.collectionSingle\"\n        v-on:click=\"squareInput(e, index)\"\n      >\n        {{ getSquareVal(square) }}\n      </div>\n    </div>\n    <p>{{ hint?.message }}</p>\n    <!--<h5>{{ hint }}</h5>-->\n    <button v-on:click=\"toggleInput\">input</button>\n    <button v-on:click=\"togglePossibles\">possibles</button>\n    <p>{{ showPossibles }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Grid\",\n  props: {\n    title: String,\n    gridVals: Array,\n    hint: Object\n  },\n  data() {\n    return {\n      gridData: this.gridVals,\n      highlights: {},\n      showPossibles: false\n    };\n  },\n  methods: {\n    togglePossibles() {\n      console.log(this.showPossibles);\n      this.showPossibles\n        ? (this.showPossibles = false)\n        : (this.showPossibles = true);\n    },\n    toggleInput() {\n      console.log(\"input\");\n    },\n    squareInput(e, index) {\n      console.log(\"sq\", index);\n    },\n    getSquareVal(square) {\n      if (square.type === \"possibles\") {\n        if (this.showPossibles) {\n          return square.val;\n        } else {\n          return \"\";\n        }\n      } else if (square.type === \"gridSingle\") {\n        return \"*\";\n      } else {\n        return square.val;\n      }\n    }\n  },\n  watch: {\n    gridVals: function() {\n      console.log(this.highlights);\n      this.gridData = this.gridVals.map(square => {\n        // console.log(square, idx);\n        return {\n          ...square\n        };\n      });\n      console.log(this.gridData);\n    },\n    hint: function() {\n      console.log(\"hint change\");\n      this.highlights = {\n        target: this.hint.index\n      };\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh2, h3, p {\n  color: rgb(65, 65, 65);\n}\n\n#svgfilters {\n  display: none;\n}\n\n#grid {\n  height: 50vh;\n  max-height: 600px;\n  aspect-ratio: 1 / 1;\n  margin: auto;\n  display: grid;\n  grid-template-columns: repeat(9, 1fr);\n  cursor: pointer;\n  position: relative;\n  filter: drop-shadow(0px 4px 5px #999);\n}\n#grid::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #f9f8f3;\n  background-size: cover;\n  z-index: 0;\n}\n\n#grid::after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: url(../assets/square.svg), url(../assets/square.svg),\n    url(../assets/square.svg);\n  background-size: 11.1111%, 33.3333%, 100%;\n  pointer-events: none;\n  z-index: 2;\n}\n.square {\n  filter: url(#PencilTexture);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(50vh / 9 - 6px);\n  line-height: calc(50vh / 9 - 6px);\n  z-index: 1;\n  overflow: hidden;\n  color: #666;\n}\n.square.original {\n  font-weight: bold;\n  filter: none;\n  color: #111;\n  font-size: calc(50vh / 9 - 2px);\n  line-height: calc(50vh / 9 - 2px);\n}\n.square.possibles {\n  font-size: 7px;\n  color: black;\n  filter: none;\n  align-items: baseline;\n  padding: 10% 20%;\n  justify-content: flex-end;\n  text-align: right;\n}\n.square.target {\n  background-color: #afffaf75;\n}\n.square.not {\n  background-color: rgba(255, 255, 0, 0.5);\n}\n.square.number {\n  background: rgba(255, 192, 203, 0.5);\n}\n.square.blockingNumber {\n  background-color: rgba(255, 192, 203, 0.5);\n}\n.square[gridSingle] {\n  background: yellow;\n}\n.square[collectionSingle] {\n  background: #afffaf;\n}\n.r1,\n.r2,\n.r3 {\n  /* transform: rotate(5deg); */\n}\n\n.r4,\n.r5,\n.r0 {\n  /* transform: rotate(2deg); */\n}\n</style>\n","import { render } from \"./Grid.vue?vue&type=template&id=b6d49a20&scoped=true\"\nimport script from \"./Grid.vue?vue&type=script&lang=js\"\nexport * from \"./Grid.vue?vue&type=script&lang=js\"\n\nimport \"./Grid.vue?vue&type=style&index=0&id=b6d49a20&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-b6d49a20\"\n\nexport default script","let sudokuStr = `\n\t\t\t000 004 000\n\t\t\t008 000 020\n\t\t\t002 003 150\n\t\n\t\t\t940 080 500\n\t\t\t800 302 006\n\t\t\t007 050 041\n\t\n\t\t\t073 500 900\n\t\t\t060 000 200\n\t\t\t000 100 000\n\t\t`;\n\nsudokuStr = `\n\t\t\t000 006 800\n\t\t\t000 280 005\n\t\t\t003 500 290\n\t\n\t\t\t071 402 300\n\t\t\t040 000 001\n\t\t\t200 600 400\n\t\n\t\t\t902 701 000\n\t\t\t004 000 000\n\t\t\t080 020 003\n\t\t`;\n\n\t\tsudokuStr = `\n\t\t\t007 500 000\n\t\t\t003 090 006\n\t\t\t640 000 800\n\t\n\t\t\t300 060 000\n\t\t\t020 308 005\n\t\t\t000 040 067\n\t\n\t\t\t009 000 002\n\t\t\t000 004 009\n\t\t\t060 032 150\n\t\t`;\n\n/*\tsudokuStr = `\n\t\t\t800 000 040\n\t\t\t000 071 600\n\t\t\t004 920 000\n\t\n\t\t\t390 800 200\n\t\t\t000 309 000\n\t\t\t007 004 069\n\t\n\t\t\t000 082 700\n\t\t\t006 790 000\n\t\t\t070 000 006\n\t\t`;\n\n sudokuStr = `\n\t\t\t000 000 000\n\t\t\t004 700 030\n\t\t\t000 642 008\n\t\n\t\t\t200 408 310\n\t\t\t093 000 000\n\t\t\t400 907 280\n\t\n\t\t\t000 821 006\n\t\t\t001 300 070\n\t\t\t000 000 000\n\t\t`; */\n\nexport default sudokuStr;","const convertToGrid = (str) => {\n    return [...str.replace(/\\s/g,'')].map((i)=>Number(i)); \n};\n\nexport default convertToGrid;\n","const removeArrayElements = (params) => params.baseArray.filter((i) => !params.elementsToRemove.includes(i));\n\nconst unionArrays = (...args) => [...new Set(args.flat())];\n\nconst intersectSets = (a, b) => {\n  return new Set([...a].filter(x => b.has(x)));\n};\n\nexport { removeArrayElements, unionArrays, intersectSets };","import { unionArrays } from './arrayUtils'\n\n// calc and cache \nconst gridIndexUtil = () => {\n\t//0-8 index of start/floor of row, col box\n\tconst rowFloor = (index) => ~~(index/9);\n\tconst colFloor = (index) => index%9;\n\tconst boxFloor = (index) => (~~(index/27) * 3) + ~~(index%9/3);\n\tconst getBoxPosition = (index) => index%3 + (~~(index%27/9)*3);\n\n\tlet gridIndexFromBox = (index, position) => {\n\t\tlet boxRootIndex = ~~(index/3) * 27 + (index%3*3);\n\t\tlet boxPositionIndex = ~~(position/3) * 9 + (position%3);\n\t\treturn boxRootIndex + boxPositionIndex;\n\t}\n\n\tlet getRowIndex = (floorIndex, i) => i + (floorIndex*9);\n\tlet getColIndex = (floorIndex, i) => (i*9) + floorIndex;\n\n\tlet getRowIndecies = (floorIndex) => Array.from({length: 9}, (_, i) => getRowIndex(floorIndex, i));\n\tlet getColIndecies = (floorIndex) => Array.from({length: 9}, (_, i) => getColIndex(floorIndex, i));\n\tlet getBoxIndecies = (floorIndex) => Array.from({length: 9}, (_, i) => gridIndexFromBox(floorIndex, i));\n\n\tlet indexCache = new Map();\n\tlet collectionCache = {\n\t\trow: [],\n\t\tcol: [],\n\t\tbox: []\n\t}\n\treturn (params) => {\n\t\t\t// given an index && or box, col or row\n\t\t\tlet { box, col, row, index } = params;\n\t\t\tlet gridIndex;\n\t\t\tif(typeof box === 'number'){\n\t\t\t\tgridIndex = gridIndexFromBox(box,index);\n\t\t\t}else if(typeof col === 'number'){\n\t\t\t\tgridIndex = (index * 9) + col\n\t\t\t}else if(typeof row === 'number'){\n\t\t\t\tgridIndex = (row * 9) + index\n\t\t\t}else{\n\t\t\t\tgridIndex = index;\n\t\t\t}\n\t\t\tlet indexInfo = indexCache.get(gridIndex);\n\t\t\t//let now = performance.now();\n\t\t\tif(!indexInfo){\n\t\t\t\t//console.log(gridIndex, 'cacheIndex')\n\t\t\t\t//calculate and set cache\n\t\t\t\tlet floors = {\n\t\t\t\t\trow: rowFloor(gridIndex),\n\t\t\t\t\tcol: colFloor(gridIndex),\n\t\t\t\t\tbox: boxFloor(gridIndex)\n\t\t\t\t}\n\t\t\t\tif(!collectionCache?.row[floors.row]){\n\t\t\t\t\tconsole.log(gridIndex, 'cacheRow')\n\t\t\t\t\tcollectionCache.row[floors.row] = getRowIndecies(floors.row);\n\t\t\t\t}\n\t\t\t\tif(!collectionCache?.col[floors.col]){\n\t\t\t\t\tconsole.log(gridIndex, 'cacheCol')\n\t\t\t\t\tcollectionCache.col[floors.col] = getColIndecies(floors.col);\n\t\t\t\t}\n\t\t\t\tif(!collectionCache?.box[floors.box]){\n\t\t\t\t\tconsole.log(gridIndex, 'cacheBox')\n\t\t\t\t\tcollectionCache.box[floors.box] = getBoxIndecies(floors.box);\n\t\t\t\t}\n\t\t\t\tindexInfo = {\n          // replace with map\n          gridIndex,\n          row: {\n            index: floors.row,\n            position: floors.col,\n            collection: collectionCache.row[floors.row],\n          },\n          col: {\n            index: floors.col,\n            position: floors.row,\n            collection: collectionCache.col[floors.col],\n          },\n          box: {\n            index: floors.box,\n            position: getBoxPosition(gridIndex),\n            collection: collectionCache.box[floors.box],\n          },\n          related: unionArrays(\n            collectionCache.row[floors.row],\n            collectionCache.col[floors.col],\n            collectionCache.box[floors.box],\n          ),\n        };\n\t\t\t\tindexCache.set(gridIndex, indexInfo);\n\t\t\t}\n\t\t\t//console.log('calcDuration: ', performance.now() - now);\n\t\t\treturn indexInfo;\n\n\t}\n}\n\nexport { gridIndexUtil };","export { findGridCandidates };\n\n//import { indexMap as gridIndexReference } from './indexMap.js';\nimport { gridIndexUtil as gridIndexReference } from '../../helpers/gridIndex.js';\nimport { removeArrayElements } from '../../helpers/arrayUtils.js';\n\nconst sudokuVals = [1,2,3,4,5,6,7,8,9];\n\nfunction findSquareCandidates(idx, grid, gridIndexReference){\n\tlet indexInfo = gridIndexReference({index: idx});//rename vars\n\tlet rowVals = indexInfo.row.collection.map((i)=>grid[i]);\n\tlet colVals = indexInfo.col.collection.map((i)=>grid[i]);\n\tlet boxVals = indexInfo.box.collection.map((i)=>grid[i]);\n\tlet nonCandidates = [...new Set([...rowVals, ...colVals, ...boxVals])];\n\treturn removeArrayElements({ baseArray: sudokuVals, elementsToRemove: nonCandidates });\n}\n\nfunction findGridCandidates(grid) {\n\t// create a candidateMap where keys = empty square index and value = set of candidates \n\t// return with populated indexInfo object\n\tconst gridReference = gridIndexReference();\n\tconst gridCandidates = grid.reduce((candidateMap, squareValue, idx)=>{\n\t\tif(!squareValue){\n\t\t\tcandidateMap.set(idx, \n\t\t\t\tnew Set(findSquareCandidates(idx,\n\t\t\t\t\tgrid,\n\t\t\t\t\tgridReference)))\n\t\t}\n\t\treturn candidateMap;\n\t}, new Map());\n\n\treturn {\n\t\tgridCandidates,\n\t\tgridReference\n\t}\n}","export { findRowColBoxCandidates }\n\nconst sudokuVals = [1,2,3,4,5,6,7,8,9];\n\nfunction findRowColBoxCandidates(analysis) {\n    const {gridCandidates, gridReference} = analysis;\n    //initial analysis\n    //scan each row, col and box and get possible positions of each number\n    //initialise maps for row, col, box candidates\n    let analysisMap = new Map(sudokuVals.map(i => [i, new Map([\n        ['rows', new Map()],\n        ['cols', new Map()],\n        ['boxes', new Map()]\n    ])]));\n\n    function addToCollection(number, type, index, position){\n        let possibles = analysisMap.get(number).get(type).get(index) || new Set();\n        possibles.add(position);\n        analysisMap.get(number)\n            .get(type)\n            .set(index, possibles);\n    }\n    //iterate through possible square values and propogate map with row, col & box possibles\n    gridCandidates.forEach((possibles, index) => {\n        let { row, col, box } = gridReference({index});\n\n        possibles.forEach((number)=>{ // populate analysisMap\n            //if possibles so far undefined create new set for values\n            addToCollection(number, 'rows', row.index, col.index);\n            addToCollection(number, 'cols', col.index, row.index);\n            addToCollection(number, 'boxes', box.index, box.position);\n        });\n    });\n    // done! own file\n\n    return analysisMap;\n}","export { getSingleCandidates }\n\nfunction getSingleCandidates(candidates) {\n    if(candidates.size === 1){\n        return [...candidates][0];\n    }\n    return false;\n}\n","export { findGridSingles }\n\n/*\n    take Map of grid candidates and return array\n    of number/index objects with only one possibility\n*/\n\nfunction findGridSingles(gridCandidates){\n    let singles = [];\n    gridCandidates.forEach((candidates, index) => {\n        if(candidates.size === 1){\n            let number = [...candidates][0];\n            singles.push({number,index});\n        }     \n    });\n    return singles;\n}","export { scanCollections }\n\nfunction scanCollections(rowColBoxCandidates, action){\n    /* scan all row/column/box candidate lists\n        and return those that pass the action test e.g.\n        contains a single value or candidate line pair\n    */\n    const results = [];\n    // iterate through numbers 1 to 9\n    rowColBoxCandidates.forEach((collections, number) => {\n        const result = eachCollection(collections, action);\n        if(result.length){\n            results.push({ number, result });\n        }\n    });\n    return results;\n}\n\nfunction eachCollection(collections, action){\n    let results = [];\n    // iterate through types row, column and box\n    collections.forEach((collection, type) => {\n        results.push(iterateCollections(collection, type, action));\n    });\n    return results.flat();\n}\n\nfunction iterateCollections(collection, type, action){\n    let results = [];\n    // iterate through candiste sets & return those that match the action\n    collection.forEach((candidates, index) => {\n        let candidateList = action(candidates, type);\n        if(candidateList !== false){\n            results.push({ index, candidateList, type });\n        }\n    });\n    return results;\n}","export { findCandidateLines }\n\n/**\n * find groups of candidates that are limited to a 1/3 segement of a row,\n * column or box. these can be used to eliminate adjacent candidates.\n */\n\nfunction findCandidateLines(candidates, type) {\n    if(candidates.size < 2 || candidates.size > 3) return false;\n    const candidateArr = [...candidates];\n    const firstCandidate = candidateArr[0];\n    if(candidateArr.every(i => Math.floor(i/3) === Math.floor(firstCandidate/3))){\n        return candidateArr;\n    }\n    if(type === 'boxes' && candidateArr.every(i => i%3 === firstCandidate%3)){\n        return candidateArr;\n    }\n    return false;\n}","export { findDeletableFromCandidateLines }\n\nfunction findDeletableFromCandidateLines(candy, gridCandidates){\n    let results = []\n    candy.forEach(i => {\n        i.result.forEach(candidateLine=>{\n            //console.log(i.number,candidateLine);\n            let type = candidateLine.type;\n            let type2;\n            if(type === 'boxes'){ \n                type = 'box';\n            }\n            if(type === 'cols'){ type = 'col'; type2 = 'col'}\n            if(type === 'rows'){ type = 'row'; type2 = 'row'}\n            let blocked = gridCandidates.gridReference({[type]: candidateLine.index, index: candidateLine.candidateList[0]});\n            if(type === 'box'){ \n                if(candidateLine.candidateList[0]%3 === candidateLine.candidateList[1]%3){\n                    type2 = 'col';\n                }else{\n                    type2 = 'row';\n                } \n            }\n            let set = new Set([...blocked[type2].collection, ...blocked.box.collection]);\n            let skewer = candidateLine.candidateList.map(index=>{\n                return gridCandidates.gridReference({[type]: candidateLine.index, index}).gridIndex;\n            });\n            skewer.forEach(gridIndex=>{\n                set.delete(gridIndex);\n            });\n            //console.log(set);\n            let toDelete = [...set].filter(idx=>{\n                //console.log(gridCandidates.gridCandidates.get(idx))\n                return gridCandidates.gridCandidates.get(idx)?.has(i.number);\n            });\n            if(toDelete.length){             \n                results.push({\n                    number: i.number,\n                    toDelete,\n                    type,\n                    index: candidateLine.index,\n                    candidates: candidateLine.candidateList,\n                    skewer\n                    })\n            }\n        });\n        \n    });\n    return results;\n}","export { findBlocks }\n\n/* e.g.\n    3: 1,5\n    4: 1,5,7,8\n    7: 1,5,7,8\n    9: 1,5\n    only 3 & 9 contain 1 & 5 so can eliminate from 4 & 7\n*/\n\nfunction findBlocks(rowColBoxCandidates, gridCandidates){\n    // console.log(gridCandidates);\n    const results = [];\n    ['rows','cols','boxes'].forEach(type=>{\n        for(let i=1; i<=9; i++){\n            let r = getRelatedCollections(rowColBoxCandidates, type, i, gridCandidates);\n            if(r){\n                results.push(r);\n            }\n        }\n    });\n    return results;\n}\n\nfunction getRelatedCollections(rowColBoxCandidates, type, index){\n    const candidates = {};\n    let combined = new Set();\n    for(let i = 1; i <= 9; i++){\n        const candidateList = rowColBoxCandidates.get(i)?.get(type).get(index);\n        if(candidateList){\n            candidates[i] = [...candidateList];\n            combined = new Set([...candidateList, ...combined]);\n        }\n    }\n    //console.log(candidates, combined);\n    let pairs = blocks(candidates,2);\n    if(pairs.length){\n        // convert pairs to indecies\n        return { type, index, pairs }\n    }\n    return false;\n}\n\nfunction grouping(groupSize, range){\n    let end = Math.pow(2, range) - Math.pow(2, range - groupSize);\n    let start = Math.pow(2, groupSize - 1) + 1;\n    let permutations = []\n    for(let i = start; i<= end; i++){\n        let combination = i.toString(2);\n        if(combination.replaceAll('0','').length === groupSize){\n            let res = combination.split('').reverse().reduce((arr, i, idx)=>{\n                if(i === '1'){ arr.push(idx); }\n                return arr;\n            },[]);\n            permutations.push(res);\n        }\n    }\n    return permutations;\n}//memoise\n\nfunction blocks(collections, groupSize){\n    const collectionKeys = Object.keys(collections);\n    let allPossibles = collectionKeys.reduce((arr,i)=>{\n        return arr.concat(collections[i]);\n    },[]);\n    let uniquePossibles = [...new Set(allPossibles)].sort();\n    // console.time('p');\n    let permutations = grouping(groupSize, uniquePossibles.length);\n    // console.timeEnd('p');\n    return permutations.reduce((arr,i)=>{\n        let permutation = i.map( j => uniquePossibles[j] ); \n        let canContain = collectionKeys.filter(collectionKey=>{\n            return collections[collectionKey].every(i => {\n                return permutation.includes(i);\n            });\n        });\n        //console.log(permutation, canContain);\n        if(canContain.length === groupSize){\n            arr.push({\n                permutation,\n                canContain: canContain.map(i=>parseInt(i,10))\n            })\n        }\n        return arr;\n    },[]);\n}","export default typeConvert;\n\nfunction typeConvert(type) {\n  if (type === \"rows\") {\n    return \"row\";\n  }\n  if (type === \"cols\") {\n    return \"col\";\n  }\n  if (type === \"boxes\") {\n    return \"box\";\n  }\n}","export { findDeletableFromBlocks };\nimport typeConvert from \"../../helpers/typeConvert\";\nimport { intersectSets } from \"../../helpers/arrayUtils\";\n\nfunction findDeletableFromBlocks(blocks, gridCandidates) {\n  //console.log(blocks, gridCandidates);\n  let results = [];\n  blocks.forEach((i) => {\n    let result = checkBlock(i, gridCandidates);\n    if (result.canDeleteFrom.length || result.canDeleteFromX.length) {\n      results.push(result);\n    }\n  });\n  return results;\n}\n\nfunction checkBlock(block, gridCandidates) {\n  //console.log(block);\n  let type = typeConvert(block.type);\n  let idxInfo = gridCandidates.gridReference({\n    [type]: block.index,\n    index: block.pairs[0].permutation[0],\n  });\n  let blockedIdxs = block.pairs[0].permutation.map((square) => {\n    return gridCandidates.gridReference({\n      [type]: block.index,\n      index: square,\n    }).gridIndex;\n  });\n  let related = idxInfo[type].collection.filter((i) => {\n    return !blockedIdxs.includes(i);\n  });\n  let relatedX = idxInfo[type].collection.filter((i) => {\n    return blockedIdxs.includes(i);\n  });\n  let blockNumbers = new Set(block.pairs[0].canContain);\n  let canDeleteFrom = related.filter((i) => {\n    const candidates = gridCandidates.gridCandidates.get(i);\n    if (!candidates) {\n      return false;\n    }\n    /*console.log(\n      candidates,\n      blockNumbers,\n      intersectSets(candidates, blockNumbers)\n    );*/\n    return intersectSets(candidates, blockNumbers).size > 0;\n  });\n  //console.log(\"X\");\n  let canDeleteFromX = relatedX.filter((i) => {\n    const candidates = gridCandidates.gridCandidates.get(i);\n    if (!candidates) {\n      return false;\n    }\n    //console.log(candidates, blockNumbers);\n    return [...candidates].some((i) => {\n      return !blockNumbers.has(i);\n    });\n  });\n  return {\n    blockType: type,\n    type: \"deleteableFromBlocks\",\n    canDeleteFrom,\n    canDeleteFromX,\n    blockedIdxs,\n    blockNumbers: [...blockNumbers],\n  };\n}\n","export default function gridSingleHint(gridSingle, gridCandidates, grid) {\n  const index = gridSingle.index;\n  const highlights = { [index]: \"target\" };\n  gridCandidates.gridReference({ index }).related.forEach((i) => {\n    if (grid[i] > 0) {\n      highlights[i] = \"blockingNumber\";\n    }\n  });\n  let message = `${gridSingle.number} can only fit here as all other numbers already appear in the same row, column or box`;\n  return { ...gridSingle, type: \"gridSingle\", highlights, message };\n}\n","/* helper functions that test if a pair of indecies (a & b)\n  are in the same row, column or box\n*/\n\nfunction sameRow(a, b) {\n  return Math.floor(a / 9) === Math.floor(b / 9);\n}\n\nfunction sameCol(a, b) {\n  return a % 9 === b % 9;\n}\n\nfunction sameBox(a, b) {\n  return (\n    Math.floor(a / 27) === Math.floor(b / 27) &&\n    Math.floor((a % 9) / 3) === Math.floor((b % 9) / 3)\n  );\n}\n\nexport { sameRow, sameCol, sameBox };","import typeConvert from \"../helpers/typeConvert\";\nimport { sameCol, sameRow, sameBox } from \"../helpers/same\";\n\nexport default function rcbSingleHint(single, gridCandidates, grid) {\n  let type = typeConvert(single.result[0].type);\n  const index = gridCandidates.gridReference({\n    [type]: single.result[0].index,\n    index: single.result[0].candidateList,\n  }).gridIndex;\n  const highlights = { [index]: \"target\" };\n  let nots = gridCandidates.gridReference({ index })[type].collection;\n  nots = nots.filter(\n    (i) => i !== index && gridCandidates.gridCandidates.get(i)\n  );\n  nots.forEach((i) => {\n    highlights[i] = \"not\";\n    //why nots?\n  });\n  const number = single.number;\n  grid.forEach((i, idx) => {\n    if (i === number) {\n      if (\n        nots.some((j) => {\n          return sameRow(idx, j) || sameCol(idx, j) || sameBox(idx, j);\n        })\n      ) {\n        highlights[idx] = \"number\";\n      }\n    }\n  });\n  let message = `${number} can only fit here as its the only place it goes in this ${type}`;\n\n  return {\n    number,\n    index,\n    typeO: type,\n    type: \"rcbSingle\",\n    highlights,\n    message,\n  };\n}\n","/* \n  construct hint for eliminating candidates\n  due to candidate lines\n*/\n\nexport default function candidateLineHint(deletable, gridCandidates) {\n  console.log(deletable);\n  const { toDelete, type, skewer, number, index } = deletable;\n  let message = `${number} candidate line can only fit in these places in this ${type} can remove from ${toDelete}`;\n  const highlights = {};\n  let nots = gridCandidates.gridReference({ [type]: index, index: 0 })[type]\n    .collection;\n  nots.forEach((i) => {\n    highlights[i] = \"not\";\n  });\n  toDelete.forEach((i) => {\n    highlights[i] = \"target\";\n  });\n  skewer.forEach((i) => {\n    highlights[i] = \"blockingNumber\";\n  });\n  return {\n    ...deletable,\n    message,\n    type: \"candidateLine\",\n    highlights,\n  };\n}","export default function blockingHint(deletableFromBlocks, gridCandidates) {\n  let block = deletableFromBlocks;\n  const highlights = {};\n  let nots = gridCandidates.gridReference({ index: block.blockedIdxs[0] })[\n    block.blockType\n  ].collection;\n  nots.forEach((i) => {\n    highlights[i] = \"not\";\n  });\n  highlights[block.blockedIdxs[0]] = \"target\";\n  highlights[block.blockedIdxs[1]] = \"target\";\n  let message = `${block.blockNumbers[0]} and ${block.blockNumbers[1]} can only fit in these places in this ${block.blockType}`;\n  return {\n    ...block,\n    type: \"blocks\",\n    message,\n    highlights,\n  };\n}","export { getHint };\n\nimport { getSingleCandidates } from \"../analysis/rowColBox/getSingleCandidates.js\";\nimport { findGridSingles } from \"../analysis/gridSquares/findGridSingles.js\";\nimport { scanCollections } from \"../analysis/scanCollections.js\";\nimport { findCandidateLines } from \"../analysis/candidateLines/findCandidateLines.js\";\nimport { findDeletableFromCandidateLines } from \"../analysis/candidateLines/findDeletableFromCandidateLines.js\";\nimport { findBlocks } from \"../analysis/blocks/findBlocks.js\";\nimport { findDeletableFromBlocks } from \"../analysis/blocks/findDeletableFromBlocks.js\";\nimport gridSingleHint from \"./gridSingleHint\";\nimport rcbSingleHint from \"./rcbSingleHint\";\nimport candidateLineHint from \"./candidateLineHint\";\nimport blockingHint from \"./blockingHint\";\n\nfunction randomHint(type) {\n  return type[Math.floor(Math.random() * type.length)];\n}\n\nfunction getHint(rowColBoxCandidates, gridCandidates, grid) {\n  const singles = scanCollections(rowColBoxCandidates, getSingleCandidates);\n  if (singles.length) {\n    return rcbSingleHint(randomHint(singles), gridCandidates, grid);\n  }\n\n  const gridSingles = findGridSingles(gridCandidates.gridCandidates);\n  if (gridSingles.length) {\n    return gridSingleHint(randomHint(gridSingles), gridCandidates, grid);\n  }\n\n  const candidateLines = scanCollections(\n    rowColBoxCandidates,\n    findCandidateLines\n  );\n  const deletable = findDeletableFromCandidateLines(\n    candidateLines,\n    gridCandidates\n  );\n  if (deletable.length) {\n    console.log(deletable);\n    return candidateLineHint(deletable[0], gridCandidates);\n  }\n\n  const blocks = findBlocks(rowColBoxCandidates, gridCandidates);\n  const deletableFromBlocks = findDeletableFromBlocks(blocks, gridCandidates);\n  if (deletableFromBlocks.length) {\n    return blockingHint(deletableFromBlocks[0], gridCandidates);\n  } else {\n    return {};\n  }\n}\n","import { findGridCandidates } from \"./analysis/gridSquares/findGridCandidates\";\nimport { findRowColBoxCandidates } from \"./analysis/rowColBox/findRowColBoxCandidates\";\nimport { getHint } from \"./hints/getHint.js\";\n\nconst solver = (grid) => {\n  console.log(grid);\n  let gridCandidates = findGridCandidates(grid);\n\n  function analyse() {\n    //console.log(\"solver\", gridCandidates);\n    console.time(\"Time this\");\n    let rowColBoxCandidates = findRowColBoxCandidates(gridCandidates);\n    //console.log(\"rcb\", rowColBoxCandidates);\n    console.timeEnd(\"Time this\");\n    return {\n      rowColBoxCandidates,\n    };\n  }\n\n  let { rowColBoxCandidates } = analyse();\n\n  function hint() {\n    ({ rowColBoxCandidates } = analyse());\n    return getHint(rowColBoxCandidates, gridCandidates, grid);\n  }\n\n  function setSquare(index, number) {\n    grid[index] = number;\n    // console.log(grid);\n    gridCandidates.gridCandidates.delete(index);\n\n    const gridInfo = gridCandidates.gridReference({ index });\n    const relatedSquares = [\n      ...new Set([\n        ...gridInfo.row.collection,\n        ...gridInfo.col.collection,\n        ...gridInfo.box.collection,\n      ]),\n    ];\n    relatedSquares.forEach(i => {\n      gridCandidates.gridCandidates.get(i)?.delete(number);\n    });\n    // subtract from collections rather than recalc\n    ({ rowColBoxCandidates } = analyse());\n  }\n\n  function deleteCandidate(idx, number) {\n    gridCandidates.gridCandidates.get(idx)?.delete(number);\n  }\n\n  return {\n    getGrid: () => grid,\n    getGridCandidates: () => gridCandidates.gridCandidates,\n    hint,\n    setSquare,\n    deleteCandidate,\n  };\n\n  // console.log(hint);\n  // find good way to get match!\n\n  /* gridCandidates.gridCandidates.forEach((val, key) => {\n        if(val.size === 1 && !hint){\n           hint = { key, val: [...val][0], info: 'grid single' }\n        }\n    }); */\n};\n\nexport default solver;\n","import { render } from \"./App.vue?vue&type=template&id=62a44db2\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=62a44db2&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=62a44db2&lang=css\""],"sourceRoot":""}